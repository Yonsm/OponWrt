#!/bin/bash
[ $(basename `pwd`) = openwrt ] || [ $(basename `pwd`) = lede ] || cd ${0%/*}/openwrt >/dev/null 2>&1 || cd ${0%/*}/lede || exit

if [ ! -z $1 ]; then
	if [ -d package/lean ]; then CONFIG=${0%/*}/lean/.config.$1; else CONFIG=${0%/*}/config/.config.$1; fi
	ln -sf $CONFIG .config

	USB=1
	case "$1" in
	CM520*)
		MAGIC=b5ab1d6f6247c989eccb311be6c450fd
		BOARD=ipq40xx
		TARGET=generic
		DEVICE=DEVICE_mobipromo_cm520-79f
		;;
	K2P*|C5*|NEWIFI3*)
		MAGIC=9c242f353867f49a96054ff8c9f2c460
		BOARD=ramips
		TARGET=mt7621
		case "$1" in
			K2P*) DEVICE=DEVICE_phicomm_k2p; [[ $1 != *\+USB* ]] && USB=0;;
			C5*) DEVICE=DEVICE_xiaoyu_xy-c5;;
			NEWIFI3*) DEVICE=DEVICE_d-team_newifi-d2;;
		esac
		;;
	Y1*)
		MAGIC=0e8896b32ade622c6f0cbd83ee589109
		BOARD=ramips
		TARGET=mt7620
		DEVICE=DEVICE_lenovo_newifi-y1
		;;
	RMAX6000*)
		MAGIC=88bbb0b8c80abf953ee5e7001a2ef514
		BOARD=mediatek
		TARGET=filogic
		[ $1 == RMAX6000+STOCK ] && DEVICE=DEVICE_xiaomi_redmi-router-ax6000-stock || DEVICE=DEVICE_xiaomi_redmi-router-ax6000
		USB=0
		;;
	N1*)
		MAGIC=792961e60be5b4e3cd770ee7bc8d3587
		BOARD=armsr
		TARGET=armv8
		DEVICE=generic
		;;
	X64*)
		MAGIC=e496746edd89318b9810e48e36a8bd9c
		BOARD=x86
		TARGET=64
		DEVICE=DEVICE_generic
		;;
	*)
		MAGIC=00000000000000000000000000000000
		DEVICE=
		[[ $1 != *\+USB* ]] && USB=0
		;;
	esac

	VERMAGIC=.vermagic.${BOARD}_${TARGET}
	[ ! -f $VERMAGIC ] && echo $MAGIC > $VERMAGIC
	ln -sf $VERMAGIC .vermagic

	if [ ! -f $CONFIG ] || [ "$2" == "-f" ]; then
		cat <<EOF > $CONFIG
# CONFIG_PACKAGE_mkf2fs is not set
# CONFIG_PACKAGE_kmod-fs-f2fs is not set
EOF

		[[ $1 != *\+NOWING* ]] && echo "CONFIG_PACKAGE_wing=y" >> $CONFIG

		if [ $USB == 1 ]; then
			cat <<EOF >> $CONFIG
CONFIG_PACKAGE_block-mount=y
CONFIG_PACKAGE_kmod-fs-exfat=y
CONFIG_PACKAGE_kmod-fs-ext4=y
CONFIG_PACKAGE_kmod-fs-vfat=y
CONFIG_PACKAGE_kmod-nls-cp936=y
CONFIG_PACKAGE_kmod-usb-storage=y
CONFIG_PACKAGE_luci-app-aria2=y
CONFIG_PACKAGE_luci-app-hd-idle=y
CONFIG_PACKAGE_ariang=y
CONFIG_PACKAGE_blkid=y
CONFIG_PACKAGE_eject=y
CONFIG_PACKAGE_hdparm=y
CONFIG_PACKAGE_lsblk=y
CONFIG_PACKAGE_tune2fs=y
CONFIG_PACKAGE_fdisk=y
CONFIG_PACKAGE_gdisk=y
CONFIG_PACKAGE_resize2fs=y
CONFIG_PACKAGE_kmod-fs-ntfs3=y
CONFIG_PACKAGE_dosfstools=y
EOF

			[ "$DEVICE" != "DEVICE_lenovo_newifi-y1" ] && echo "CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y" >> $CONFIG
			if [[ $1 = *\+SMB4* ]] || [[ $1 = N1* ]] || [[ $1 = X64* ]]; then
				echo "CONFIG_PACKAGE_luci-app-samba4=y" >> $CONFIG
			else
				echo "CONFIG_PACKAGE_luci-app-ksmbd=y" >> $CONFIG
				echo "CONFIG_PACKAGE_ksmbd-avahi-service=y" >> $CONFIG
			fi
fi

		[[ $1 = *\+HASS* ]] && cat <<EOF >> $CONFIG
CONFIG_PACKAGE_mosquitto-client-nossl=y
CONFIG_PACKAGE_mosquitto-nossl=y
CONFIG_PACKAGE_python3-pip=y
CONFIG_PACKAGE_python3-dev=y
CONFIG_PACKAGE_libffi=y
CONFIG_PACKAGE_gcc=y
CONFIG_PACKAGE_ffmpeg=y
EOF
# CONFIG_PACKAGE_python3-cffi=y

		if [[ $1 = *\+DOCKER* ]]; then
			cat <<EOF >> $CONFIG
CONFIG_PACKAGE_luci-app-dockerman=y
CONFIG_PACKAGE_dockerd=y
EOF
			[[ $1 = X64* ]]  && cat <<EOF >> $CONFIG
CONFIG_PACKAGE_kmod-macvlan=y
CONFIG_PACKAGE_kmod-dummy=y
EOF
		fi

		[ ! -z $DEVICE ] && cat <<EOF >> $CONFIG
CONFIG_TARGET_${BOARD}=y
CONFIG_TARGET_${BOARD}_${TARGET}=y
CONFIG_TARGET_${BOARD}_${TARGET}_${DEVICE}=y
EOF

		[ -d /Library/Apple ] && cat <<EOF >> $CONFIG
CONFIG_GOLANG_EXTERNAL_BOOTSTRAP_ROOT="/usr/local/go/bin"
EOF

		[[ $1 = N1* ]]  && cat <<EOF >> $CONFIG
# CONFIG_TARGET_ROOTFS_CPIOGZ is not set
# CONFIG_TARGET_ROOTFS_EXT4FS is not set
# CONFIG_TARGET_ROOTFS_SQUASHFS is not set
# CONFIG_DEFAULT_mtd is not set
CONFIG_BRCMFMAC_SDIO=y
# CONFIG_BRCMFMAC_USB is not set
# CONFIG_BRCMFMAC_PCIE is not set
CONFIG_BTRFS_PROGS_ZSTD=y
CONFIG_PACKAGE_kmod-usb-net=y
CONFIG_PACKAGE_kmod-brcmfmac=y
CONFIG_PACKAGE_kmod-mac80211=y
CONFIG_PACKAGE_wpa-cli=y
CONFIG_PACKAGE_wpad-basic=y
CONFIG_PACKAGE_btrfs-progs=y
CONFIG_PACKAGE_kmod-usb2=y
EOF

		if [[ $1 = X64* ]]; then
			cat <<EOF >> $CONFIG
CONFIG_TARGET_ROOTFS_TARGZ=y
# CONFIG_TARGET_ROOTFS_SQUASHFS is not set
# CONFIG_GRUB_IMAGES is not set
# CONFIG_PACKAGE_mtd is not set
CONFIG_GRUB_TIMEOUT="2"
CONFIG_TARGET_ROOTFS_PARTSIZE=400
# CONFIG_PACKAGE_kmod-amazon-ena is not set
# CONFIG_PACKAGE_kmod-amd-xgbe is not set
# CONFIG_PACKAGE_kmod-bnx2 is not set
CONFIG_PACKAGE_kmod-e1000=y
# CONFIG_PACKAGE_kmod-e1000e is not set
# CONFIG_PACKAGE_kmod-forcedeth is not set
# CONFIG_PACKAGE_kmod-igb is not set
CONFIG_PACKAGE_kmod-igc=y
# CONFIG_PACKAGE_kmod-ixgbe is not set
# CONFIG_PACKAGE_kmod-phy-realtek is not set
# CONFIG_PACKAGE_kmod-r8169 is not set
# CONFIG_PACKAGE_kmod-tg3 is not set
CONFIG_PACKAGE_lm-sensors=y
CONFIG_PACKAGE_ethtool=y
CONFIG_PACKAGE_kmod-fs-hfsplus=y
CONFIG_PACKAGE_openssl-util=y
CONFIG_PACKAGE_kmod-usb2=y
CONFIG_PACKAGE_kmod-usb3=y
EOF
			[[ $1 = *\+WIFI* ]] && cat <<EOF >> $CONFIG
CONFIG_PACKAGE_hostapd=y
CONFIG_PACKAGE_kmod-mac80211=y
CONFIG_PACKAGE_wireless-regdb=y
CONFIG_PACKAGE_wireless-tools=y
CONFIG_PACKAGE_wpa-supplicant=y
CONFIG_PACKAGE_iwlwifi-firmware-ax210=y
CONFIG_PACKAGE_kmod-iwlwifi=y
EOF
# CONFIG_PACKAGE_rtl8821ce-firmware=y
# CONFIG_PACKAGE_kmod-rtw88=y
# CONFIG_PACKAGE_pciutils=y
# CONFIG_PACKAGE_wpa-cli=y
# CONFIG_PACKAGE_wpad-basic=y
	fi

	[[ $1 = X64* ]] && [ -d package/lean ] && cat <<EOF >> $CONFIG
# CONFIG_PACKAGE_kmod-alx is not set
# CONFIG_PACKAGE_kmod-e1000e is not set
# CONFIG_PACKAGE_kmod-igb is not set
# CONFIG_PACKAGE_kmod-igbvf is not set
# CONFIG_PACKAGE_kmod-iavf is not set
# CONFIG_PACKAGE_kmod-bnx2x is not set
# CONFIG_PACKAGE_kmod-pcnet32 is not set
# CONFIG_PACKAGE_kmod-tulip is not set
# CONFIG_PACKAGE_kmod-via-velocity is not set
# CONFIG_PACKAGE_kmod-vmxnet3 is not set
# CONFIG_PACKAGE_kmod-i40e is not set
# CONFIG_PACKAGE_kmod-i40evf is not set
# CONFIG_PACKAGE_kmod-r8125 is not set
# CONFIG_PACKAGE_kmod-8139cp is not set
# CONFIG_PACKAGE_kmod-8139too is not set
# CONFIG_PACKAGE_kmod-tg3 is not set
# CONFIG_PACKAGE_autocore-x86 is not set
# CONFIG_PACKAGE_automount is not set
# CONFIG_PACKAGE_autosamba is not set
# CONFIG_PACKAGE_luci-app-adbyby-plus is not set
# CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
# CONFIG_PACKAGE_luci-proto-bonding is not set
# CONFIG_PACKAGE_luci-app-diskman is not set
# CONFIG_PACKAGE_luci-app-unblockmusic is not set
# CONFIG_PACKAGE_luci-app-zerotier is not set
# CONFIG_PACKAGE_luci-app-xlnetacc is not set
# CONFIG_PACKAGE_luci-app-wireguard is not set
# CONFIG_PACKAGE_luci-app-ttyd is not set
# CONFIG_PACKAGE_kmod-sound-hda-core is not set
# CONFIG_PACKAGE_kmod-sound-hda-codec-realtek is not set
# CONFIG_PACKAGE_kmod-sound-hda-codec-via is not set
# CONFIG_PACKAGE_kmod-sound-via82xx is not set
# CONFIG_PACKAGE_kmod-sound-hda-intel is not set
# CONFIG_PACKAGE_kmod-sound-hda-codec-hdmi is not set
# CONFIG_PACKAGE_kmod-sound-i8x0 is not set
# CONFIG_PACKAGE_kmod-usb-audio is not set
# CONFIG_PACKAGE_kmod-usb-net is not set
# CONFIG_PACKAGE_kmod-usb-net-asix-ax88179 is not set
# CONFIG_PACKAGE_kmod-usb-net-rtl8150 is not set
# CONFIG_PACKAGE_kmod-usb-net-rtl8152-vendor is not set
# CONFIG_PACKAGE_kmod-usb-net-aqc111 is not set
# CONFIG_PACKAGE_kmod-mlx4-core is not set
# CONFIG_PACKAGE_kmod-mlx5-core is not set
# CONFIG_PACKAGE_kmod-drm-i915 is not set
# CONFIG_PACKAGE_kmod-drm-amdgpu is not set
CONFIG_PACKAGE_kmod-shortcut-fe=y
CONFIG_PACKAGE_kmod-shortcut-fe-cm=y
EOF
	fi

	#[ -d /Library/Apple ] && [[ $1 = X64* ]] && echo "CONFIG_PACKAGE_libintl-full=y" >> $CONFIG

	# 避免 macOS 编译错误
	if [ -d /Library/Apple ]; then
		if [[ $1 = X64* ]]; then
			sed -i 's/= +libnettle/= +libintl-full +libnettle/' feeds/packages/libs/gnutls/Makefile
			sed -i 's/libpthread +zlib/libpthread +libintl-full +zlib/' feeds/packages/lang/python/python3/Makefile
			# sed -i 's/$(INTL_DEPENDS)/+libintl-full/' feeds/packages/net/ksmbd-tools/Makefile
			# sed -i 's/-liconv $(if $(INTL_FULL),-lintl)/-liconv -lintl/' feeds/packages/net/ksmbd-tools/Makefile
		else
			sed -i 's/= +libintl-full +libnettle/= +libnettle/' feeds/packages/libs/gnutls/Makefile
			sed -i 's/libpthread +libintl-full +zlib/libpthread +zlib/' feeds/packages/lang/python/python3/Makefile
			# sed -i 's/+libintl-full/$(INTL_DEPENDS)/' feeds/packages/net/ksmbd-tools/Makefile
			# sed -i 's/-liconv -lintl/-liconv $(if $(INTL_FULL),-lintl)/' feeds/packages/net/ksmbd-tools/Makefile
		fi
	fi

	#
	rm -rf files
	[[ $1 = N1* ]] && ln -sf ${0%/*}/n1-files files
fi

make menuconfig
